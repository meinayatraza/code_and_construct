/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.top-full {
  top: 100%;
}
.z-50 {
  z-index: 50;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-\[150px\] {
  height: 150px;
}
.h-auto {
  height: auto;
}
.w-full {
  width: 100%;
}
.max-w-full {
  max-width: 100%;
}
.min-w-\[160px\] {
  min-width: 160px;
}
.min-w-\[250px\] {
  min-width: 250px;
}
.flex-1 {
  flex: 1;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-around {
  justify-content: space-around;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t-4 {
  border-top-style: var(--tw-border-style);
  border-top-width: 4px;
}
.object-cover {
  object-fit: cover;
}
.text-center {
  text-align: center;
}
.uppercase {
  text-transform: uppercase;
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.group-hover\:block {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      display: block;
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
    }
  }
}
